#summary Getting started with EveDb
#labels Featured

= Getting started =

== Using existing instance ==

If you do not want to create your own AppEngine application, load data into it and deploy, than you can use already existing and running one at http://odylab-evedb.appspot.com. Couple of dump versions are maintained there, so, feel free to use it. See [Methods methods] than are available in EveDb and [GettingStarted#Clients clients].

== Creating own instance ==

If you want your own AppEngine application with running EveDb, you will have to create data set using static database dump (or download dump), upload it into Datastore and deploy Java application into AppEngine.

=== Loading data into Datastore ===

See [WorkingWithDatastore working with Datastore].

=== Deploying application ===

Build application with `mvn-clean-package.bat` and deploy with `ws/appcfg-update.bat`.

== Clients ==

There are various ways how to communicate with web-services, since they are HTTP requests and provide JSON or XML responses, it is not hard to use them in any popular programming language.

=== evedb-ws-client ===

As for Java, EveDb provides small library that can work with EveDb instances in easy and convenient way.

Add following Maven dependency:
{{{
<dependency>
  <groupId>lv.odylab.evedb</groupId>
  <artifactId>evedb-ws-client</artifactId>
  <version>1.5</version>
</dependency>
}}}

Add following repository:
{{{
<repository>
  <id>evedb.googlecode.com</id>
  <url>http://evedb.googlecode.com/svn/mvnrepo</url>
</repository>
}}}

Usage example:
{{{
String eveDbUrl = "http://odylab-evedb.appspot.com";
EveDbWsClient client = new EveDbWsClientImpl(eveDbUrl, new HttpRequestSenderImpl());
InvTypeBasicInfoDto invTypeBasicInfoDto = client.getTypeBasicInfoByTypeName("Tritanium");
}}}